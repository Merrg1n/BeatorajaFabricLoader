plugins {
    id 'java-library'
    id 'maven-publish'
    id 'eclipse'
    id 'application'
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.fabricmc.net/"
    }
}

sourceCompatibility = 8
targetCompatibility = 8

version = project_version
group = maven_group
archivesBaseName = archives_base_name

dependencies {
    // TODO: download beatoraja from mocha-repository.info automatically
    compileOnly files("run/beatoraja.jar")
    // beatoraja doesn't use gradle or maven to build itself.
    // So you need put beatoraja's something into run folder manually.

    api "net.fabricmc:fabric-loader:${project.loader_version}"
    api "net.fabricmc:access-widener:${project.access_widener_version}"

    api "org.ow2.asm:asm:${project.asm_version}"
    api "org.ow2.asm:asm-analysis:${project.asm_version}"
    api "org.ow2.asm:asm-commons:${project.asm_version}"
    api "org.ow2.asm:asm-tree:${project.asm_version}"
    api "org.ow2.asm:asm-util:${project.asm_version}"

    api("net.fabricmc:sponge-mixin:${project.mixin_version}"){
        exclude module: 'launchwrapper'
        exclude group: 'com.google.guava'
        exclude group: 'com.google.code.gson'
    }
    api "io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"
}

application {
    mainClassName = "io.github.merrg1n.beatorajafabric.loader.Main"
}

run {
    jvmArgs += [
            '-Dfabric.development=true',
            '-Dmixin.debug=true'
    ]
    workingDir = file("run")
    workingDir.mkdir()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                'Specification-Version': 8.0,
                'Multi-Release': 'true'
        )
    }
}

tasks.register('copyToLib', Copy) {
    into "build/libs/libraries"
    from configurations.runtimeClasspath
}

build.dependsOn(copyToLib)