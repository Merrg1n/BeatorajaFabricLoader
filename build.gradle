plugins {
    id 'java-library'
    id 'maven-publish'
    id 'eclipse'
    id 'application'
    id "de.undercouch.download" version "5.6.0"
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.fabricmc.net/"
    }
}

sourceCompatibility = 8
targetCompatibility = 8

version = project.project_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

var beatorajaFileName = "beatoraja${beatoraja_version}-modernchic"

task downloadBeatoraja(type: Download) {
    onlyIf { !project.file("run/beatoraja.jar").exists() }
    src "https://mocha-repository.info/download/${beatorajaFileName}.zip"
    dest layout.buildDirectory.file("beatoraja.zip")
}

task unzipBeatoraja(dependsOn: downloadBeatoraja, type: Copy) {
    onlyIf { !project.file("run/beatoraja.jar").exists() }
    from zipTree(downloadBeatoraja.dest)
    into project.file("run")
    doLast {
        delete downloadBeatoraja.dest
    }
}

task prepareBeatoraja(dependsOn: unzipBeatoraja, type: Copy) {
    onlyIf { project.file("run/${beatorajaFileName}").isDirectory() }
    from project.file("run/${beatorajaFileName}")
    into project.file("run")
    doLast {
        delete project.file("run/beatoraja${beatorajaFileName}")
    }
}

run.dependsOn prepareBeatoraja


dependencies {
    api "net.fabricmc:fabric-loader:${project.loader_version}"
    api "net.fabricmc:access-widener:${project.access_widener_version}"

    api "org.ow2.asm:asm:${project.asm_version}"
    api "org.ow2.asm:asm-analysis:${project.asm_version}"
    api "org.ow2.asm:asm-commons:${project.asm_version}"
    api "org.ow2.asm:asm-tree:${project.asm_version}"
    api "org.ow2.asm:asm-util:${project.asm_version}"

    api("net.fabricmc:sponge-mixin:${project.mixin_version}") {
        exclude module: 'launchwrapper'
        exclude group: 'com.google.guava'
        exclude group: 'com.google.code.gson'
    }
    api "io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"
}

distributions {
    main {
        contents {
            from(configurations.runtimeClasspath) {
                into "libraries"
            }
            from(layout.buildDirectory.dir("libs")) {
                exclude "*-sources.jar"
                rename "${archives_base_name}-${version}.jar", "${archives_base_name}.jar"
                into "/"
            }
            into "/"
            eachFile { FileCopyDetails fcd ->
                if (fcd.relativePath.pathString.startsWith('lib/') || fcd.relativePath.pathString.startsWith('bin/')) {
                    fcd.exclude()
                }
            }
        }
    }
}

application {
    mainClassName = "io.github.merrg1n.beatorajafabric.Main"
}

run {
    workingDir = project.file("run")
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                'Specification-Version': 8.0,
                'Multi-Release': 'true'
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = uri("$buildDir/repo")
        }
    }
}